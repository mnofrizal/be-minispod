@baseUrl = http://localhost:3000/api/v1
@authToken = {{login_response.response.body.data.tokens.accessToken}}
@nodeId = {{get_all_response.response.body.data.workers[0].id}}
@nodeName = {{get_all_response.response.body.data.workers[0].name}}

### Login to get access token
# @name login_response
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@paas.com",
  "password": "Admin123!@#"
}

### Sync cluster state with database
POST {{baseUrl}}/admin/workers/sync
Authorization: Bearer {{authToken}}
Content-Type: application/json


### Admin - Get all worker nodes
# @name get_all_response
GET {{baseUrl}}/admin/workers
Authorization: Bearer {{authToken}}

### Admin - Get all worker nodes with filters
GET {{baseUrl}}/admin/workers?page=1&limit=10&status=ACTIVE&isReady=true
Authorization: Bearer {{authToken}}

### Admin - Get cluster statistics
GET {{baseUrl}}/admin/workers/stats
Authorization: Bearer {{authToken}}

### Admin - Get online worker nodes
GET {{baseUrl}}/admin/workers/online
Authorization: Bearer {{authToken}}

### Admin - Get offline worker nodes
GET {{baseUrl}}/admin/workers/offline
Authorization: Bearer {{authToken}}

### Admin - Sync cluster state
POST {{baseUrl}}/admin/workers/sync
Authorization: Bearer {{authToken}}

### Admin - Get worker node details (by database ID)
GET {{baseUrl}}/admin/workers/{{nodeId}}
Authorization: Bearer {{authToken}}

### Admin - Get worker node details (by node name - direct from Kubernetes)
GET {{baseUrl}}/admin/workers/{{nodeName}}
Authorization: Bearer {{authToken}}

### Admin - Get worker node details (hardcoded node name for testing)
GET {{baseUrl}}/admin/workers/i6700
Authorization: Bearer {{authToken}}

### Admin - Cordon worker node
POST {{baseUrl}}/admin/workers/{{nodeId}}/cordon
Authorization: Bearer {{authToken}}

### Admin - Uncordon worker node
POST {{baseUrl}}/admin/workers/{{nodeId}}/uncordon
Authorization: Bearer {{authToken}}

### Admin - Drain worker node
POST {{baseUrl}}/admin/workers/{{nodeId}}/drain
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "gracePeriodSeconds": 30,
  "timeout": 300,
  "force": false,
  "deleteLocalData": false
}