### Worker Management API Testing
### Base URL: http://localhost:3000/api/workers
### All endpoints require admin authentication

### Variables
@baseUrl = http://localhost:3000/api/v1
@adminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWRkYWsyNWIwMDAxMTRjZWc5cGk0NnA2IiwiZW1haWwiOiJhZG1pbkBwYWFzLmNvbSIsInJvbGUiOiJBRE1JTklTVFJBVE9SIiwiaWF0IjoxNzUzMTE5MDU3LCJleHAiOjE3NTMyMDU0NTcsImF1ZCI6InBhYXMtZnJvbnRlbmQiLCJpc3MiOiJwYWFzLWJhY2tlbmQifQ.7bcoVQdNC5iRzyHlHGq8IltSAugsiGCMdb7-LVpcm2U
@nodeId = worker-node-id-here
@nodeName = worker-node-name-here

### ============================================
### AUTHENTICATION SETUP (Run this first)
### ============================================

### Admin Login (Get admin token first)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@paas.com",
  "password": "Admin123!@#"
}


### ============================================
### WORKER NODE STATISTICS & OVERVIEW
### ============================================

### Get worker node statistics
GET {{baseUrl}}/workers/stats
Authorization: Bearer {{adminToken}}

### Get online worker nodes
GET {{baseUrl}}/workers/online
Authorization: Bearer {{adminToken}}

### Get offline worker nodes
GET {{baseUrl}}/workers/offline
Authorization: Bearer {{adminToken}}

### ============================================
### WORKER NODE LISTING & FILTERING
### ============================================

### Get all worker nodes (default pagination)
GET {{baseUrl}}/workers
Authorization: Bearer {{adminToken}}

### Get worker nodes with pagination
GET {{baseUrl}}/workers?page=1&limit=5
Authorization: Bearer {{adminToken}}

### Filter by status - ACTIVE nodes
GET {{baseUrl}}/workers?status=ACTIVE
Authorization: Bearer {{adminToken}}

### Filter by status - INACTIVE nodes
GET {{baseUrl}}/workers?status=INACTIVE
Authorization: Bearer {{adminToken}}

### Filter by status - MAINTENANCE nodes
GET {{baseUrl}}/workers?status=MAINTENANCE
Authorization: Bearer {{adminToken}}

### Filter by status - PENDING nodes
GET {{baseUrl}}/workers?status=PENDING
Authorization: Bearer {{adminToken}}

### Filter by status - NOT_READY nodes
GET {{baseUrl}}/workers?status=NOT_READY
Authorization: Bearer {{adminToken}}

### Filter by schedulable status - schedulable nodes
GET {{baseUrl}}/workers?isSchedulable=true
Authorization: Bearer {{adminToken}}

### Filter by schedulable status - non-schedulable nodes
GET {{baseUrl}}/workers?isSchedulable=false
Authorization: Bearer {{adminToken}}

### Filter by ready status - ready nodes
GET {{baseUrl}}/workers?isReady=true
Authorization: Bearer {{adminToken}}

### Filter by ready status - not ready nodes
GET {{baseUrl}}/workers?isReady=false
Authorization: Bearer {{adminToken}}

### Search worker nodes by name/hostname/IP/architecture
GET {{baseUrl}}/workers?search=worker-01
Authorization: Bearer {{adminToken}}

### Combined filters with sorting
GET {{baseUrl}}/workers?status=ACTIVE&isSchedulable=true&isReady=true&sortBy=name&sortOrder=asc
Authorization: Bearer {{adminToken}}

### ============================================
### WORKER NODE RETRIEVAL
### ============================================

### Get worker node by ID
GET {{baseUrl}}/workers/{{nodeId}}
Authorization: Bearer {{adminToken}}

### Get worker node by name
GET {{baseUrl}}/workers/name/{{nodeName}}
Authorization: Bearer {{adminToken}}

### ============================================
### WORKER NODE CREATION
### ============================================

### Create new worker node - Basic
POST {{baseUrl}}/workers
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "worker-01",
  "hostname": "worker-01.cluster.local",
  "ipAddress": "192.168.1.101",
  "cpuCores": 8,
  "cpuArchitecture": "x86_64",
  "totalMemory": 16384,
  "totalStorage": 500000,
  "architecture": "amd64",
  "operatingSystem": "Ubuntu 22.04.3 LTS",
  "kubeletVersion": "v1.28.2",
  "containerRuntime": "containerd://1.7.2",
  "kernelVersion": "5.15.0-78-generic",
  "osImage": "Ubuntu 22.04.3 LTS"
}

### Create new worker node - Comprehensive
POST {{baseUrl}}/workers
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "worker-02",
  "hostname": "worker-02.cluster.local",
  "ipAddress": "192.168.1.102",
  "cpuCores": 12,
  "cpuArchitecture": "x86_64",
  "totalMemory": 32768,
  "totalStorage": 1000000,
  "architecture": "amd64",
  "operatingSystem": "Ubuntu 22.04.3 LTS",
  "status": "ACTIVE",
  "isReady": true,
  "isSchedulable": true,
  "maxPods": 110,
  "currentPods": 0,
  "allocatedCPU": 0,
  "allocatedMemory": 0,
  "allocatedStorage": 0,
  "labels": {
    "node-role.kubernetes.io/worker": "",
    "kubernetes.io/arch": "amd64",
    "kubernetes.io/os": "linux",
    "node.kubernetes.io/instance-type": "standard"
  },
  "taints": [],
  "kubeletVersion": "v1.28.2",
  "containerRuntime": "containerd://1.7.2",
  "kernelVersion": "5.15.0-78-generic",
  "osImage": "Ubuntu 22.04.3 LTS"
}

### Create worker node with taints
POST {{baseUrl}}/workers
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "worker-03",
  "hostname": "worker-03.cluster.local",
  "ipAddress": "192.168.1.103",
  "cpuCores": 16,
  "cpuArchitecture": "x86_64",
  "totalMemory": 65536,
  "totalStorage": 2000000,
  "architecture": "amd64",
  "operatingSystem": "Ubuntu 22.04.3 LTS",
  "status": "MAINTENANCE",
  "isReady": false,
  "isSchedulable": false,
  "maxPods": 110,
  "labels": {
    "node-role.kubernetes.io/worker": "",
    "kubernetes.io/arch": "amd64",
    "kubernetes.io/os": "linux",
    "node.kubernetes.io/instance-type": "high-memory"
  },
  "taints": [
    {
      "key": "node.kubernetes.io/maintenance",
      "value": "true",
      "effect": "NoSchedule"
    }
  ],
  "kubeletVersion": "v1.28.2",
  "containerRuntime": "containerd://1.7.2",
  "kernelVersion": "5.15.0-78-generic",
  "osImage": "Ubuntu 22.04.3 LTS"
}

### ============================================
### WORKER NODE UPDATES
### ============================================

### Update worker node - Basic info
PUT {{baseUrl}}/workers/{{nodeId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "hostname": "worker-01-updated.cluster.local",
  "ipAddress": "192.168.1.111",
  "totalMemory": 32768,
  "totalStorage": 750000
}

### Update worker node - Comprehensive
PUT {{baseUrl}}/workers/{{nodeId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "hostname": "worker-01-prod.cluster.local",
  "ipAddress": "10.0.1.101",
  "cpuCores": 16,
  "totalMemory": 65536,
  "totalStorage": 1000000,
  "maxPods": 150,
  "labels": {
    "node-role.kubernetes.io/worker": "",
    "kubernetes.io/arch": "amd64",
    "kubernetes.io/os": "linux",
    "node.kubernetes.io/instance-type": "high-performance",
    "environment": "production"
  },
  "kubeletVersion": "v1.28.3",
  "containerRuntime": "containerd://1.7.3"
}

### ============================================
### WORKER NODE STATUS MANAGEMENT
### ============================================

### Update worker node status to ACTIVE
PATCH {{baseUrl}}/workers/{{nodeId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "ACTIVE"
}

### Update worker node status to MAINTENANCE
PATCH {{baseUrl}}/workers/{{nodeId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "MAINTENANCE"
}

### Update worker node status to INACTIVE
PATCH {{baseUrl}}/workers/{{nodeId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "INACTIVE"
}

### Update worker node status to PENDING
PATCH {{baseUrl}}/workers/{{nodeId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "PENDING"
}

### Update worker node status to NOT_READY
PATCH {{baseUrl}}/workers/{{nodeId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "NOT_READY"
}

### Toggle worker node schedulable status
PATCH {{baseUrl}}/workers/{{nodeId}}/schedulable
Authorization: Bearer {{adminToken}}

### ============================================
### SYSTEM ENDPOINTS (Kubernetes Integration)
### ============================================

### Update worker node heartbeat
PATCH {{baseUrl}}/workers/{{nodeId}}/heartbeat
Authorization: Bearer {{adminToken}}

### Update worker node resource allocation
PATCH {{baseUrl}}/workers/{{nodeId}}/resources
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "allocatedCPU": 4.5,
  "allocatedMemory": 8192,
  "allocatedStorage": 50000,
  "currentPods": 15
}

### Update worker node resource allocation - High usage
PATCH {{baseUrl}}/workers/{{nodeId}}/resources
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "allocatedCPU": 12.8,
  "allocatedMemory": 28672,
  "allocatedStorage": 450000,
  "currentPods": 85
}

### ============================================
### WORKER NODE DELETION
### ============================================

### Delete worker node
DELETE {{baseUrl}}/workers/{{nodeId}}
Authorization: Bearer {{adminToken}}

### ============================================
### ERROR TESTING
### ============================================

### Test validation errors - Invalid worker node creation
POST {{baseUrl}}/workers
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "",
  "cpuCores": -1,
  "totalMemory": "invalid",
  "status": "INVALID_STATUS"
}

### Test not found - Get non-existent worker node
GET {{baseUrl}}/workers/non-existent-id
Authorization: Bearer {{adminToken}}

### Test duplicate name - Create worker with existing name
POST {{baseUrl}}/workers
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "worker-01",
  "hostname": "duplicate.cluster.local",
  "ipAddress": "192.168.1.200",
  "cpuCores": 4,
  "cpuArchitecture": "x86_64",
  "totalMemory": 8192,
  "totalStorage": 250000,
  "architecture": "amd64",
  "operatingSystem": "Ubuntu 22.04.3 LTS"
}

### Test unauthorized access - No token
GET {{baseUrl}}/workers

### Test invalid status update
PATCH {{baseUrl}}/workers/{{nodeId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "INVALID_STATUS"
}

### Test invalid resource update
PATCH {{baseUrl}}/workers/{{nodeId}}/resources
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "allocatedCPU": -1,
  "allocatedMemory": "invalid",
  "currentPods": -5
}

### ============================================
### PERFORMANCE TESTING
### ============================================

### Large pagination test
GET {{baseUrl}}/workers?page=1&limit=100
Authorization: Bearer {{adminToken}}

### Complex filtering test
GET {{baseUrl}}/workers?status=ACTIVE&isSchedulable=true&isReady=true&search=worker&sortBy=totalMemory&sortOrder=desc&page=1&limit=20
Authorization: Bearer {{adminToken}}