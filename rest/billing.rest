### Billing API Testing
### Base URL: http://localhost:3000/api/v1/billing

@baseUrl = http://localhost:3000/api/v1
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWRkdHJiNWYwMDAxYTY3cWQ0aHFrOTlnIiwiZW1haWwiOiJhZG1pbkBwYWFzLmNvbSIsInJvbGUiOiJBRE1JTklTVFJBVE9SIiwiaWF0IjoxNzUzMjU2MTQ4LCJleHAiOjE3NTMzNDI1NDgsImF1ZCI6InBhYXMtZnJvbnRlbmQiLCJpc3MiOiJwYWFzLWJhY2tlbmQifQ.laRAVRTvgMJflN-Xt0xyMkDbMN8h_U31wCveLGlaCF4

### Health Check
GET {{baseUrl}}/billing/health

### ===========================================
### AUTHENTICATION (Get token first)
### ===========================================

### Login Admin User (from seed data)
POST {{baseUrl}}/auth/login
Content-Type: application/json


{
  "email": "admin@paas.com",
  "password": "Admin123!@#"
}


### ===========================================
### BALANCE MANAGEMENT
### ===========================================

### Get User Balance
GET {{baseUrl}}/billing/balance
Authorization: Bearer {{authToken}}


### ===========================================
### TOP-UP MANAGEMENT
### ===========================================

### Create Top-up Transaction
POST {{baseUrl}}/billing/topup
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 100000,
  "currency": "IDR"
}

### Get Top-up Details
GET {{baseUrl}}/billing/topup/{{topupId}}
Authorization: Bearer {{authToken}}

### List User Top-ups
GET {{baseUrl}}/billing/topup?page=1&limit=10
Authorization: Bearer {{authToken}}

### List Top-ups with Status Filter
GET {{baseUrl}}/billing/topup?page=1&limit=10&status=PAID
Authorization: Bearer {{authToken}}

### ===========================================
### INVOICE MANAGEMENT
### ===========================================

### List User Invoices
GET {{baseUrl}}/billing/invoices?page=1&limit=10
Authorization: Bearer {{authToken}}

### List Invoices with Filters
GET {{baseUrl}}/billing/invoices?page=1&limit=10&type=TOPUP&status=PAID&startDate=2024-01-01&endDate=2024-12-31
Authorization: Bearer {{authToken}}

### Get Invoice Details
GET {{baseUrl}}/billing/invoices/{{invoiceId}}
Authorization: Bearer {{authToken}}

### Download Invoice PDF
GET {{baseUrl}}/billing/invoices/{{invoiceId}}/pdf
Authorization: Bearer {{authToken}}

### ===========================================
### DASHBOARD
### ===========================================

### Get Dashboard Overview
GET {{baseUrl}}/billing/dashboard/overview
Authorization: Bearer {{authToken}}

### Get Billing Analytics
GET {{baseUrl}}/billing/dashboard/analytics?startDate=2024-01-01&endDate=2024-12-31
Authorization: Bearer {{authToken}}

### ===========================================
### UNIFIED TRANSACTION HISTORY (NEW)
### ===========================================

### Get All Unified Transactions (Recommended)
GET {{baseUrl}}/billing/transactions?page=1&limit=20
Authorization: Bearer {{authToken}}

### Get Transactions with Filters
GET {{baseUrl}}/billing/transactions?page=1&limit=20&type=TOPUP&status=SUCCESS&startDate=2024-01-01&endDate=2024-12-31
Authorization: Bearer {{authToken}}

### Get Transaction Details by ID
GET {{baseUrl}}/billing/transactions/{{transactionId}}
Authorization: Bearer {{authToken}}

### Get Transactions by Type
GET {{baseUrl}}/billing/transactions?page=1&limit=10&type=TOPUP
Authorization: Bearer {{authToken}}

### Get Transactions by Status
GET {{baseUrl}}/billing/transactions?page=1&limit=10&status=PENDING
Authorization: Bearer {{authToken}}

### Get Service Purchase Transactions
GET {{baseUrl}}/billing/transactions?page=1&limit=10&type=SERVICE_PURCHASE
Authorization: Bearer {{authToken}}

### Pay for Pending Transaction
POST {{baseUrl}}/billing/transactions/{{transactionId}}/pay
Authorization: Bearer {{authToken}}

### ===========================================
### SUBSCRIPTION WITH BALANCE
### ===========================================

### Check Subscription Eligibility
GET {{baseUrl}}/services/{{serviceId}}/eligibility
Authorization: Bearer {{authToken}}

### Create Subscription (using balance)
POST {{baseUrl}}/subscriptions
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "serviceId": "cmdde35wt000011j5yxb0eekx",
  "confirmBalance": true
}

### ===========================================
### WEBHOOK TESTING (No Auth Required)
### ===========================================

### Midtrans Webhook Simulation
POST http://amrizals-imac-pro-1.bone-acoustic.ts.net:3000/api/v1/billing/webhooks/midtrans
Content-Type: application/json

{
  "va_numbers": [
    {
      "va_number": "9889307657698288",
      "bank": "bni"
    }
  ],
  "transaction_time": "2025-07-23 00:48:22",
  "transaction_status": "settlement",
  "transaction_id": "5ad9bda5-f41d-43d7-bc9e-8ae5d1258dbc",
  "status_message": "midtrans payment notification",
  "status_code": "200",
  "signature_key": "3840308ac7b709349cffee958dac912cc860a7db610684062e5260dfb11c79431267dcb4c7c41cfe2b111e35e8bf0baba857d27b86a77ddbc9e7fec5e6fd0086",
  "settlement_time": "2025-07-23 00:48:34",
  "payment_type": "bank_transfer",
  "payment_amounts": [
    {
      "paid_at": "2025-07-23 00:48:34",
      "amount": "100000.00"
    }
  ],
  "order_id": "TOPUP-CMDDE364-1753206462490-U5URT4",
  "merchant_id": "G765593076",
  "gross_amount": "100000.00",
  "fraud_status": "accept",
  "expiry_time": "2025-07-24 00:47:42",
  "currency": "IDR"
}

### ===========================================
### ERROR TESTING
### ===========================================

### Test Insufficient Balance
POST {{baseUrl}}/billing/topup
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 5000
}

### Test Invalid Amount
POST {{baseUrl}}/billing/topup
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 15000000
}

### Test Invalid Top-up ID
GET {{baseUrl}}/billing/topup/invalid-id
Authorization: Bearer {{authToken}}

### Test Invalid Invoice ID
GET {{baseUrl}}/billing/invoices/invalid-id
Authorization: Bearer {{authToken}}

### ===========================================
### ADMIN TESTING (if admin endpoints exist)
### ===========================================

### Get All Users' Billing Stats (Admin only)
GET {{baseUrl}}/billing/admin/stats
Authorization: Bearer {{authToken}}

### Get User Billing Details (Admin only)
GET {{baseUrl}}/billing/admin/users/{{userId}}
Authorization: Bearer {{authToken}}

### ===========================================
### RATE LIMITING TESTING
### ===========================================

### Test Rate Limiting (send multiple requests quickly)
POST {{baseUrl}}/billing/topup
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 50000
}

### ===========================================
### VARIABLES FOR TESTING
### ===========================================

# Set these variables after getting responses:
# @topupId = get from create top-up response
# @invoiceId = get from invoice list response
# @serviceId = get from service catalog
# @userId = get from user profile
# @transactionId = get from unified transactions list response

### Example: Set variables from responses
# @topupId = {{createTopup.response.body.data.transactionId}}
# @invoiceId = {{listInvoices.response.body.data.invoices[0].id}}
# @transactionId = {{getTransactions.response.body.data.transactions[0].id}}

### ===========================================
### SAMPLE DATA FROM SEEDER (for testing)
### ===========================================

# Sample Transaction IDs from seeded data:
# Top-up transactions: Check the unified transactions endpoint
# Service purchase transactions: Check the unified transactions endpoint
# Sample User ID: cmdde364e000111j59oefypq7 (admin user)
# Sample Service ID: cmdde35wt000011j5yxb0eekx (N8N service)

### ===========================================
### UNIFIED TRANSACTION SYSTEM
### ===========================================

# UNIFIED ENDPOINTS:
# - GET /billing/transactions (unified transaction list)
# - GET /billing/transactions/:id (transaction details)
# - POST /billing/transactions/:id/pay (pay for pending transactions)
#
# BENEFITS OF UNIFIED SYSTEM:
# - Single source of truth for all user transactions
# - Consistent data format for frontend display
# - Includes both top-ups and service purchases
# - Better filtering and pagination support
# - Action buttons support (pay, cancel, download invoice)
# - Complete transaction lifecycle tracking
# - Pay functionality for closed Midtrans windows
#
# PAY WORKFLOW:
# 1. User sees pending transaction with "canPay": true
# 2. Frontend calls POST /billing/transactions/:id/pay
# 3. Backend returns existing or new Snap token
# 4. Frontend reopens Midtrans payment window with the token
# 5. User completes payment, webhook updates transaction status