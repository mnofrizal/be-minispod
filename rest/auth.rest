### Variables
@baseUrl = http://localhost:3000/api/v1
@contentType = application/json

### Health Check
GET http://localhost:3000/health

###

### Register New User
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "John Doe",
  "email": "john.doe@example.com",
  "password": "SecurePass123!",
  "confirmPassword": "SecurePass123!"
}


###

### Login Admin User (from seed data)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@paas.com",
  "password": "Admin123!@#"
}

###

### Login Regular User (from seed data)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "customer@test.com",
  "password": "Customer123!@#"
}

###

### Google OAuth Authentication
# Note: Replace the idToken with a real Google ID token from your frontend
POST {{baseUrl}}/auth/google
Content-Type: {{contentType}}

{
  "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImRkNTMwMTIwNGZjMWQ2YTBkNjhjNzgzYTM1Y2M5YzEwYjI1ZTFmNGEiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIxNjk4Njg1MjExMDYtajFxOWZsOXZ1YmJvYjA5cjA2NDlubmZwNTNzMmxxcGkuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIxNjk4Njg1MjExMDYtajFxOWZsOXZ1YmJvYjA5cjA2NDlubmZwNTNzMmxxcGkuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDYyOTI0MzYyNDc5NjY3NzA0NTciLCJlbWFpbCI6Im1ub2ZyaXphbDE5OTZAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF0X2hhc2giOiI2MWxOQXVQQml1dWkxakx5ZEtfUUdRIiwibmFtZSI6Ik11aGFtbWFkIE5hdWZhbCBBbXJpemFsIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0xrdG5VNGNLOU9tQkc2SURvd0l6TUZJemFjZWJjU19KRGtLOWhUOVgyX2dybjN4LVE9czk2LWMiLCJnaXZlbl9uYW1lIjoiTXVoYW1tYWQiLCJmYW1pbHlfbmFtZSI6Ik5hdWZhbCBBbXJpemFsIiwiaWF0IjoxNzU0MTMwMzYzLCJleHAiOjE3NTQxMzM5NjN9.L8zyf0SceR9RdavRi37LnE0U26rsLJX-Fc6uc1vVOaL-2SsA2kaowWU_t_SNTh_w55Z2SlFOr1EddGn-jWlxgZaCi7dsoFFLhe3UlLBXouIZaSazObFjVszEMhG8Xh8fHKHNydj5USqOq3VyPqSmbEcEGx9eeCTLOnpHdBw2SD6u_InVsJpD-tbxpony857hogL0wUb4KrTDAOKYSk--iJod_bl_KWd4up-wm8oB51Y3rQRuavsueCp5JG-6ULCFdIwxkCWPghnlWm87E733ZjzELfKrJJKUcigfmLhpUsH-_C5CZcLkYVgzJbSyAfuH43PbQKN1aMoV90GKbcsAxw"
}

###

### Get User Profile (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
GET {{baseUrl}}/auth/profile
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWRneWk4M3AwMDA2OXlhaDA4c3NnaDRyIiwiZW1haWwiOiJjdXN0b21lckB0ZXN0LmNvbSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzUzNDEwMzc5LCJleHAiOjE3NTM0OTY3NzksImF1ZCI6InBhYXMtZnJvbnRlbmQiLCJpc3MiOiJwYWFzLWJhY2tlbmQifQ.0dhcqiGGsVjrAdbf2iQyfVSwpQ7FrvSiz8-VQy4dJvw

###

### Update User Profile (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
PUT {{baseUrl}}/auth/profile
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN

{
  "name": "John Doe Updated"
}

###

### Change Password (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
POST {{baseUrl}}/auth/change-password
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN

{
  "currentPassword": "SecurePass123!",
  "newPassword": "NewSecurePass123!",
  "confirmPassword": "NewSecurePass123!"
}

###

### Refresh Token
POST {{baseUrl}}/auth/refresh
Content-Type: {{contentType}}

{
  "refreshToken": "YOUR_REFRESH_TOKEN"
}

###

### Check Authentication Status (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
GET {{baseUrl}}/auth/me
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWRoZXN3MjcwMDA1MzB2ZGszdTZlcDYxIiwiZW1haWwiOiJhZG1pbkBwYWFzLmNvbSIsInJvbGUiOiJBRE1JTklTVFJBVE9SIiwiaWF0IjoxNzUzMzc0MDQ3LCJleHAiOjE3NTM0NjA0NDcsImF1ZCI6InBhYXMtZnJvbnRlbmQiLCJpc3MiOiJwYWFzLWJhY2tlbmQifQ.LaKmtmtZe4Pd3US3qQZWA9TSopyWcGw3lKrUZGepndA

###

### Logout (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
POST {{baseUrl}}/auth/logout
Authorization: Bearer YOUR_ACCESS_TOKEN

###

### Deactivate Account (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
DELETE {{baseUrl}}/auth/account
Authorization: Bearer YOUR_ACCESS_TOKEN

###

### Get Service Catalog (public endpoint)
GET {{baseUrl}}/services

###

### Get Service Details (public endpoint)
GET {{baseUrl}}/services/n8n-service

###

### Get User Subscriptions (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
GET {{baseUrl}}/subscriptions
Authorization: Bearer YOUR_ACCESS_TOKEN

###

### Create New Subscription (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
POST {{baseUrl}}/subscriptions
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN

{
  "serviceId": "n8n-service"
}

###

### Get User Pods (requires authentication)
# Replace YOUR_ACCESS_TOKEN with actual token from login response
GET {{baseUrl}}/pods
Authorization: Bearer YOUR_ACCESS_TOKEN

###

### Get All Users (admin only)
# Replace YOUR_ADMIN_ACCESS_TOKEN with actual admin token from login response
GET {{baseUrl}}/users
Authorization: Bearer YOUR_ADMIN_ACCESS_TOKEN

###

### Test Invalid Endpoint (404 error)
GET {{baseUrl}}/invalid-endpoint

###

### Test Rate Limiting (send multiple requests quickly)
GET {{baseUrl}}/services
GET {{baseUrl}}/services
GET {{baseUrl}}/services
GET {{baseUrl}}/services
GET {{baseUrl}}/services

###

### Test Validation Error (missing required fields)
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "",
  "email": "invalid-email",
  "password": "123"
}

###

### Test Authentication Error (invalid credentials)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "nonexistent@example.com",
  "password": "wrongpassword"
}

###

### Test Unauthorized Access (no token)
GET {{baseUrl}}/auth/profile

###

### Test Invalid Token
GET {{baseUrl}}/auth/profile
Authorization: Bearer invalid_token_here